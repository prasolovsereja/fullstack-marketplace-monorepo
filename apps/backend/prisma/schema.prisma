// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int       @id@default(autoincrement())
  email       String    @unique
  password    String
  role        Role      @default(BUYER)
  createdAt   DateTime  @default(now())
  products    Product[] @relation("SellerProducts")
  sessions    Session[] @relation("UserSessions")
}

enum Role {
  BUYER
  SELLER
  ADMIN
}

model Product {
  id            Int @id@default(autoincrement())
  title         String
  description   String?
  price         Int
  quantity      Int
  seller        User @relation("SellerProducts",fields: [sellerId], references: [id])
  sellerId      Int
  categories    Category[]  @relation("ProductsCategories")
}

model Category {
  id            Int @id@default(autoincrement())
  name          String @unique
  isFeatured    Boolean @default(false)
  products      Product[] @relation("ProductsCategories")

}

model Session {
  id            Int @id@default(autoincrement())
  userId        Int
  user          User @relation("UserSessions", fields: [userId], references: [id])
  deviceLabel   Labels
  refreshToken  RefreshToken[] @relation("Session tokens")
  createdAt     DateTime @default(now())
  lastUsedAt    DateTime
  revokedAt     DateTime?
}

model RefreshToken {
  id            Int @id@default(autoincrement())
  sessionId     Int
  tokenHash     String @unique
  session       Session @relation("Session tokens", fields: [sessionId], references: [id])
  expiresAt     DateTime
  replacedById  Int?
  replacedBy    RefreshToken? @relation("TokenReplace", fields: [replacedById], references: [id])
  replaced      RefreshToken[] @relation("TokenReplace")
  updatedAt     DateTime
  createdAt     DateTime @default(now())
}

enum Labels {
  userPc
  userPhone
  guest
  unknown
}
